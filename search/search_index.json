{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to MkDocs \u00b6 For full documentation visit mkdocs.org . Commands \u00b6 mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message. Project layout \u00b6 mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Welcome to MkDocs"},{"location":"#welcome-to-mkdocs","text":"For full documentation visit mkdocs.org .","title":"Welcome to MkDocs"},{"location":"#commands","text":"mkdocs new [dir-name] - Create a new project. mkdocs serve - Start the live-reloading docs server. mkdocs build - Build the documentation site. mkdocs help - Print this help message.","title":"Commands"},{"location":"#project-layout","text":"mkdocs.yml # The configuration file. docs/ index.md # The documentation homepage. ... # Other markdown pages, images and other files.","title":"Project layout"},{"location":"Misc/detectionlab/","text":"Setting Up Detection Lab \u00b6 This was my process for setting up the awesome Detection Lab project by Chris Long . I'm using a fork of it from Dustin Lee that includes Security Onion. I referenced Richard Bejtlich's write-up , but I had some tweaks based on doing it fully in Ubuntu (actually Linux Mint 19.1). For references, I'm installing it on an Intel NUC with i3 processor, 32 GB RAM, and 256 GB SSD. Started with a new install of Linux Mint 19.1. After applying all updates ( sudo apt-get update -y && sudo apt-get dist-upgrade -y ), I added screen & ssh server with sudo apt-get update screen ssh . Now install the latest version of VirtualBox using the VitualBox guide for Linux . First I added deb https://download.virtualbox.org/virtualbox/debian <mydist> contrib (my Ubuntu distro is bionic ) to /etc/apt/sources.list . Then I ran the following to complete the install: wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add - wget -q https://www.virtualbox.org/download/oracle_vbox.asc -O- | sudo apt-key add - sudo apt-get update sudo apt-get install virtualbox-6.0 Then install the the latest extension pack from the main downloads page and install it: sudo VBoxManage extpack install <extension-pack-version>.vbox-extpack Now add your account to the local VirtualBox group: sudo usermod -aG vboxusers <your username>","title":"Setting Up Detection Lab"},{"location":"Misc/detectionlab/#setting-up-detection-lab","text":"This was my process for setting up the awesome Detection Lab project by Chris Long . I'm using a fork of it from Dustin Lee that includes Security Onion. I referenced Richard Bejtlich's write-up , but I had some tweaks based on doing it fully in Ubuntu (actually Linux Mint 19.1). For references, I'm installing it on an Intel NUC with i3 processor, 32 GB RAM, and 256 GB SSD. Started with a new install of Linux Mint 19.1. After applying all updates ( sudo apt-get update -y && sudo apt-get dist-upgrade -y ), I added screen & ssh server with sudo apt-get update screen ssh . Now install the latest version of VirtualBox using the VitualBox guide for Linux . First I added deb https://download.virtualbox.org/virtualbox/debian <mydist> contrib (my Ubuntu distro is bionic ) to /etc/apt/sources.list . Then I ran the following to complete the install: wget -q https://www.virtualbox.org/download/oracle_vbox_2016.asc -O- | sudo apt-key add - wget -q https://www.virtualbox.org/download/oracle_vbox.asc -O- | sudo apt-key add - sudo apt-get update sudo apt-get install virtualbox-6.0 Then install the the latest extension pack from the main downloads page and install it: sudo VBoxManage extpack install <extension-pack-version>.vbox-extpack Now add your account to the local VirtualBox group: sudo usermod -aG vboxusers <your username>","title":"Setting Up Detection Lab"},{"location":"documentation/installing-mkdocs/","text":"Installing MkDocs \u00b6 Most of this is directly from https://alinex.gitlab.io/env/mkdocs/ . Kudos for great info on that site! Windows in WSL \u00b6 I suggest installing in Ubuntu with Windows Services for Linux (WSL) as follows: Note This should work identically in a standard Ubuntu host/VM. Install and update WSL: sudo apt-get update -y && sudo apt-get upgrade -y Install necessary packages: sudo apt install build-essential python3-dev python3-pip python3-setuptools python3-wheel python3-cffi libcairo2 libpango-1.0-0 libpangocairo-1.0-0 libgdk-pixbuf2.0-0 libffi-dev shared-mime-info Verify version (you will likely get an error here): python --version pip --version If you got errors, add these aliases to ~/.bashrc : alias python=python3 alias pip=pip3 Regardless of whether you got errors above, add the following to the end of ~/.bashrc : PATH=$PATH:~/.local/bin Now source .bashrc: source ~/.bashrc Now install the python packages: pip install mkdocs pip install mkdocs-material pip install pygments pip install pymdown-extensions pip install markdown-blockdiag pip install markdown-include pip install mkdocs-pdf-export-plugin That should get it done. Now you can run various MkDocs commands, such as building a new site with mkdocs new <sitename>","title":"Installing MkDocs"},{"location":"documentation/installing-mkdocs/#installing-mkdocs","text":"Most of this is directly from https://alinex.gitlab.io/env/mkdocs/ . Kudos for great info on that site!","title":"Installing MkDocs"},{"location":"documentation/installing-mkdocs/#windows-in-wsl","text":"I suggest installing in Ubuntu with Windows Services for Linux (WSL) as follows: Note This should work identically in a standard Ubuntu host/VM. Install and update WSL: sudo apt-get update -y && sudo apt-get upgrade -y Install necessary packages: sudo apt install build-essential python3-dev python3-pip python3-setuptools python3-wheel python3-cffi libcairo2 libpango-1.0-0 libpangocairo-1.0-0 libgdk-pixbuf2.0-0 libffi-dev shared-mime-info Verify version (you will likely get an error here): python --version pip --version If you got errors, add these aliases to ~/.bashrc : alias python=python3 alias pip=pip3 Regardless of whether you got errors above, add the following to the end of ~/.bashrc : PATH=$PATH:~/.local/bin Now source .bashrc: source ~/.bashrc Now install the python packages: pip install mkdocs pip install mkdocs-material pip install pygments pip install pymdown-extensions pip install markdown-blockdiag pip install markdown-include pip install mkdocs-pdf-export-plugin That should get it done. Now you can run various MkDocs commands, such as building a new site with mkdocs new <sitename>","title":"Windows in WSL"}]}